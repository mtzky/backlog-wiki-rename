import groovy.transform.Memoized

plugins {
    id 'latest-wrapper'
    id 'java-conventions'
    id 'application'
}

dependencies {
    implementation 'com.nulab-inc:backlog4j:2.5.3'
    runtimeOnly 'org.slf4j:slf4j-jdk14:1.7.36'
}

application {
    mainClass.set('org.mtzky.backlog.wiki.Rename')
}

run {
    environment << getConfProperties('env.properties')
    systemProperty 'java.util.logging.config.file', file('src/conf/logging.properties')
    jvmArgs = [
            '--add-opens', 'java.base/sun.net.www.protocol.https=ALL-UNNAMED',
            '--add-opens', 'java.base/java.net=ALL-UNNAMED',
    ]
}

tasks.withType(Test).configureEach {
    environment << getConfProperties('env.properties')
    systemProperty 'java.util.logging.config.file', file('src/test/resources/logging.properties')
    jvmArgs = [
            '--add-opens', 'java.base/sun.net.www.protocol.https=ALL-UNNAMED',
            '--add-opens', 'java.base/java.net=ALL-UNNAMED',
    ]
}

@Memoized
Properties getConfProperties(propName) {
    def filePath = "src/conf/${propName}"
    // println "getConfProperties('${filePath}')"
    def props = new Properties()
    file(filePath).withInputStream { props.load(it) }
    return props
}
